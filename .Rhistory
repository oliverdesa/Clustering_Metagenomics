long_df <- pooled_data %>%
pivot_longer(
cols = starts_with("Amidase"):starts_with("Muramidase"),
names_to = "Enzyme",
values_to = "Value"
)
View(long_df)
ggplot(long_df, aes(x = Enzyme, y = Value, fill = config)) +
geom_bar(stat = "identity", position = position_dodge()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Enzyme Values by Case and Control", x = "Enzyme", y = "Value")
# Split the data by Enzyme
enzyme_list <- split(long_df, long_df$Enzyme)
# Function to create and save plots
plot_function <- function(data, enzyme_name) {
p <- ggplot(data, aes(x = config, y = Value)) +
geom_boxplot(aes(fill = config)) +
geom_jitter(width = 0.2, size = 2, aes(color = config)) +
labs(title = paste("Enzyme:", enzyme_name), x = "Config", y = "Value") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
return(p)
}
# Loop through each enzyme and plot
pdf("enzyme_plots.pdf")  # Save plots to a PDF file
# Function to create a plot
plot_function <- function(data, enzyme_name) {
p <- ggplot(data, aes(x = config, y = Value, fill = config)) +
geom_boxplot() +
geom_jitter(width = 0.2, size = 2, aes(color = config)) +
labs(title = paste("Enzyme:", enzyme_name), x = "Config", y = "Value") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave(paste0("Enzyme_", enzyme_name, ".png"), plot = p, width = 10, height = 6)
}
# Loop through each enzyme and plot
enzyme_names <- unique(long_df$Enzyme)
for (enzyme in enzyme_names) {
enzyme_data <- filter(long_df, Enzyme == enzyme)
plot_function(enzyme_data, enzyme)
}
library(feather)
library(ggplot2)
library(tidyverse)
pooled_data <- read_feather('pooled_abundance_data.feather')
pooled_data <- as.data.frame(pooled_data)
metadata <- read_feather('metadf.feather')
metadata <- as.data.frame(metadata)
# add the 'config' column from metadata to the pooled_data df, make sure they align
# properly on the SampleIdentifier column present in both dfs
pooled_data$config <- metadata[match(pooled_data$SampleIdentifier, metadata$SampleIdentifier),]$config
long_df <- pooled_data %>%
pivot_longer(
cols = starts_with("Amidase"):starts_with("UC118"),
names_to = "Enzyme",
values_to = "Value"
)
# Function to create a plot
plot_function <- function(data, enzyme_name) {
p <- ggplot(data, aes(x = config, y = Value, fill = config)) +
geom_boxplot() +
geom_jitter(width = 0.2, size = 2, aes(color = config)) +
labs(title = paste("Enzyme:", enzyme_name), x = "Config", y = "Value") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave(paste0("Enzyme_", enzyme_name, ".png"), plot = p, width = 10, height = 10)
}
# Loop through each enzyme and plot
enzyme_names <- unique(long_df$Enzyme)
for (enzyme in enzyme_names) {
enzyme_data <- filter(long_df, Enzyme == enzyme)
plot_function(enzyme_data, enzyme)
}
# Function to create a plot
plot_function <- function(data, enzyme_name) {
p <- ggplot(data, aes(x = config, y = Value)) +
geom_boxplot(aes(fill = config)) +
scale_fill_manual(values = c("control" = "grey", "case" = "blue")) +
geom_jitter(width = 0.2, size = 2, aes(color = config)) +
scale_color_manual(values = c("control" = "grey", "case" = "blue")) +
labs(title = paste("Enzyme:", enzyme_name), x = "Config", y = "Value") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave(paste0("Enzyme_", enzyme_name, ".png"), plot = p, width = 10, height = 6)
}
# Loop through each enzyme and plot
enzyme_names <- unique(long_df$Enzyme)
for (enzyme in enzyme_names) {
enzyme_data <- filter(long_df, Enzyme == enzyme)
plot_function(enzyme_data, enzyme)
}
# Function to create a plot
plot_function <- function(data, enzyme_name) {
p <- ggplot(data, aes(x = config, y = Value)) +
geom_boxplot(aes(fill = config)) +
scale_fill_manual(values = c("control" = "grey", "case" = "blue")) +
geom_jitter(width = 0.2, size = 2, aes(color = config)) +
scale_color_manual(values = c("control" = "grey", "case" = "blue")) +
labs(title = paste("Enzyme:", enzyme_name), x = "Config", y = "Value") +
theme_minimal(base_size = 12) +
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1)
)
ggsave(paste0("Enzyme_", enzyme_name, ".png"), plot = p, width = 10, height = 6)
}
# Loop through each enzyme and plot
enzyme_names <- unique(long_df$Enzyme)
for (enzyme in enzyme_names) {
enzyme_data <- filter(long_df, Enzyme == enzyme)
plot_function(enzyme_data, enzyme)
}
# Function to create a plot
plot_function <- function(data, enzyme_name) {
p <- ggplot(data, aes(x = config, y = Value)) +
geom_boxplot(aes(fill = config)) +
scale_fill_manual(values = c("control" = "grey", "case" = "blue")) +
geom_jitter(width = 0.2, size = 2, aes(color = config), stroke=0.5) +
scale_color_manual(values = c("control" = "grey", "case" = "blue")) +
labs(title = paste("Enzyme:", enzyme_name), x = "Config", y = "Value") +
theme_minimal(base_size = 12) +
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1)
)
ggsave(paste0("Enzyme_", enzyme_name, ".png"), plot = p, width = 10, height = 6)
}
# Loop through each enzyme and plot
enzyme_names <- unique(long_df$Enzyme)
for (enzyme in enzyme_names) {
enzyme_data <- filter(long_df, Enzyme == enzyme)
plot_function(enzyme_data, enzyme)
}
# Function to create a plot
plot_function <- function(data, enzyme_name) {
p <- ggplot(data, aes(x = config, y = Value)) +
geom_boxplot(aes(fill = config)) +
scale_fill_manual(values = c("control" = "grey", "case" = "blue")) +
geom_jitter(width = 0.2, size = 2, aes(color = config), stroke=1) +
scale_color_manual(values = c("control" = "grey", "case" = "blue")) +
labs(title = paste("Enzyme:", enzyme_name), x = "Config", y = "Value") +
theme_minimal(base_size = 12) +
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1)
)
ggsave(paste0("Enzyme_", enzyme_name, ".png"), plot = p, width = 10, height = 6)
}
# Loop through each enzyme and plot
enzyme_names <- unique(long_df$Enzyme)
for (enzyme in enzyme_names) {
enzyme_data <- filter(long_df, Enzyme == enzyme)
plot_function(enzyme_data, enzyme)
}
# Function to create a plot
plot_function <- function(data, enzyme_name) {
p <- ggplot(data, aes(x = config, y = Value)) +
geom_boxplot(aes(fill = config)) +
scale_fill_manual(values = c("control" = "grey", "case" = "blue")) +
geom_jitter(width = 0.2, size = 2, aes(fill = config), stroke=1) +
scale_color_manual(values = c("control" = "grey", "case" = "blue")) +
labs(title = paste("Enzyme:", enzyme_name), x = "Config", y = "Value") +
theme_minimal(base_size = 12) +
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1)
)
ggsave(paste0("Enzyme_", enzyme_name, ".png"), plot = p, width = 10, height = 6)
}
# Loop through each enzyme and plot
enzyme_names <- unique(long_df$Enzyme)
for (enzyme in enzyme_names) {
enzyme_data <- filter(long_df, Enzyme == enzyme)
plot_function(enzyme_data, enzyme)
}
# Function to create a plot
plot_function <- function(data, enzyme_name) {
p <- ggplot(data, aes(x = config, y = Value)) +
geom_boxplot(aes(fill = config)) +
scale_fill_manual(values = c("control" = "grey", "case" = "blue")) +
geom_jitter(width = 0.2, size = 2, aes(color = config), stroke=1) +
scale_fill_manual(values = c("control" = "grey", "case" = "blue")) +
labs(title = paste("Enzyme:", enzyme_name), x = "Config", y = "Value") +
theme_minimal(base_size = 12) +
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1)
)
ggsave(paste0("Enzyme_", enzyme_name, ".png"), plot = p, width = 10, height = 6)
}
# Loop through each enzyme and plot
enzyme_names <- unique(long_df$Enzyme)
for (enzyme in enzyme_names) {
enzyme_data <- filter(long_df, Enzyme == enzyme)
plot_function(enzyme_data, enzyme)
}
# Function to create a plot
plot_function <- function(data, enzyme_name) {
p <- ggplot(data, aes(x = config, y = Value)) +
geom_boxplot(aes(fill = config)) +
scale_fill_manual(values = c("control" = "grey", "case" = "blue")) +
geom_jitter(width = 0.2, size = 2, aes(color = black)) +
scale_fill_manual(values = c("control" = "grey", "case" = "blue")) +
labs(title = paste("Enzyme:", enzyme_name), x = "Config", y = "Value") +
theme_minimal(base_size = 12) +
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1)
)
ggsave(paste0("Enzyme_", enzyme_name, ".png"), plot = p, width = 10, height = 6)
}
# Loop through each enzyme and plot
enzyme_names <- unique(long_df$Enzyme)
for (enzyme in enzyme_names) {
enzyme_data <- filter(long_df, Enzyme == enzyme)
plot_function(enzyme_data, enzyme)
}
# Function to create a plot
plot_function <- function(data, enzyme_name) {
p <- ggplot(data, aes(x = config, y = Value)) +
geom_boxplot(aes(fill = config)) +
scale_fill_manual(values = c("control" = "grey", "case" = "blue")) +
geom_jitter(width = 0.2, size = 2, color = 'black', aes(fill=factor(config))) +
scale_fill_manual(values = c("control" = "grey", "case" = "blue")) +
labs(title = paste("Enzyme:", enzyme_name), x = "Config", y = "Value") +
theme_minimal(base_size = 12) +
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1)
)
ggsave(paste0("Enzyme_", enzyme_name, ".png"), plot = p, width = 10, height = 6)
}
# Loop through each enzyme and plot
enzyme_names <- unique(long_df$Enzyme)
for (enzyme in enzyme_names) {
enzyme_data <- filter(long_df, Enzyme == enzyme)
plot_function(enzyme_data, enzyme)
}
# Function to create a plot
plot_function <- function(data, enzyme_name) {
p <- ggplot(data, aes(x = config, y = Value)) +
geom_boxplot(aes(fill = config)) +
scale_fill_manual(values = c("control" = "grey", "case" = "blue")) +
geom_jitter(width = 0.2, size = 1, color = 'black', aes(fill=factor(config))) +
scale_fill_manual(values = c("control" = "grey", "case" = "blue")) +
labs(title = paste("Enzyme:", enzyme_name), x = "Config", y = "Value") +
theme_minimal(base_size = 12) +
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1)
)
ggsave(paste0("Enzyme_", enzyme_name, ".png"), plot = p, width = 10, height = 6)
}
# Loop through each enzyme and plot
enzyme_names <- unique(long_df$Enzyme)
for (enzyme in enzyme_names) {
enzyme_data <- filter(long_df, Enzyme == enzyme)
plot_function(enzyme_data, enzyme)
}
# Function to create a plot
plot_function <- function(data, enzyme_name) {
p <- ggplot(data, aes(x = config, y = Value)) +
geom_boxplot(aes(fill = config)) +
scale_fill_manual(values = c("control" = "grey", "case" = "blue")) +
geom_jitter(width = 0.2, size = 1, color = 'black', aes(fill=factor(config))) +
scale_fill_manual(values = c("control" = "grey", "case" = "blue")) +
labs(
title = paste("Enzyme:", enzyme_name),
x = "Group",
y = "Reads per Kilobase (RPK)"
) +
theme_minimal(base_size = 12) +
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1)
)
ggsave(paste0("Enzyme_", enzyme_name, ".png"), plot = p, width = 10, height = 6)
}
# Loop through each enzyme and plot
enzyme_names <- unique(long_df$Enzyme)
for (enzyme in enzyme_names) {
enzyme_data <- filter(long_df, Enzyme == enzyme)
plot_function(enzyme_data, enzyme)
}
# Function to create a plot
plot_function <- function(data, enzyme_name) {
p <- ggplot(data, aes(x = config, y = Value)) +
geom_boxplot(aes(fill = config)) +
scale_fill_manual(values = c("control" = "grey", "case" = "blue")) +
geom_jitter(width = 0.2, size = 1, color = 'black', aes(fill=factor(config))) +
scale_fill_manual(values = c("control" = "grey", "case" = "blue")) +
labs(
title = paste(enzyme_name),
x = "Group",
y = "Reads per Kilobase (RPK)"
) +
theme_minimal(base_size = 12) +
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1)
)
ggsave(paste0("Enzyme_", enzyme_name, ".png"), plot = p, width = 10, height = 6)
}
# Loop through each enzyme and plot
enzyme_names <- unique(long_df$Enzyme)
for (enzyme in enzyme_names) {
enzyme_data <- filter(long_df, Enzyme == enzyme)
plot_function(enzyme_data, enzyme)
}
# Function to create a plot
plot_function <- function(data, enzyme_name) {
p <- ggplot(data, aes(x = config, y = Value)) +
geom_boxplot(aes(fill = config)) +
scale_fill_manual(values = c("control" = "grey", "case" = "blue")) +
geom_jitter(width = 0.2, size = 1, color = 'black', aes(fill=factor(config))) +
scale_fill_manual(values = c("control" = "grey", "case" = "blue")) +
labs(
title = paste(enzyme_name),
x = "Group",
y = "Reads per Kilobase (RPK)"
) +
theme_minimal(base_size = 12) +
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1)
)
ggsave(paste0("Enzyme_", enzyme_name, ".png"), dpi = 600, plot = p, width = 10, height = 6)
}
# Loop through each enzyme and plot
enzyme_names <- unique(long_df$Enzyme)
for (enzyme in enzyme_names) {
enzyme_data <- filter(long_df, Enzyme == enzyme)
plot_function(enzyme_data, enzyme)
}
# Function to create a plot
plot_function <- function(data, enzyme_name) {
p <- ggplot(data, aes(x = config, y = Value)) +
geom_boxplot(aes(fill = config)) +
scale_fill_manual(values = c("control" = "grey", "case" = "blue")) +
geom_jitter(width = 0.2, size = 1, color = 'black', aes(fill=factor(config))) +
scale_fill_manual(values = c("control" = "grey", "case" = "blue")) +
labs(
title = paste(enzyme_name),
x = "Group",
y = "Reads per Kilobase (RPK)"
) +
theme_minimal(base_size = 12) +
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none"
)
ggsave(paste0("Enzyme_", enzyme_name, ".png"), dpi = 600, plot = p, width = 10, height = 6)
}
# Loop through each enzyme and plot
enzyme_names <- unique(long_df$Enzyme)
for (enzyme in enzyme_names) {
enzyme_data <- filter(long_df, Enzyme == enzyme)
plot_function(enzyme_data, enzyme)
}
# Define new labels with the known sample sizes
new_labels <- c(case = "Case (n=74)", control = "Control (n=53)")
# Function to create a plot
plot_function <- function(data, enzyme_name) {
p <- ggplot(data, aes(x = config, y = Value)) +
geom_boxplot(aes(fill = config)) +
scale_fill_manual(values = c("control" = "grey", "case" = "blue")) +
geom_jitter(width = 0.2, size = 2, aes(color = config), stroke = 0.5) +
scale_color_manual(values = c("control" = "grey", "case" = "blue")) +
labs(
title = paste("Enzyme:", enzyme_name),
x = "",
y = "Reads per Kilobase (RPK)"
) +
scale_x_discrete(labels = new_labels) +
theme_minimal(base_size = 12) +
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none"
)
ggsave(paste0("Enzyme_", enzyme_name, ".png"), dpi = 600, plot = p, width = 10, height = 6)
}
# Loop through each enzyme and plot
enzyme_names <- unique(long_df$Enzyme)
for (enzyme in enzyme_names) {
enzyme_data <- filter(long_df, Enzyme == enzyme)
plot_function(enzyme_data, enzyme)
}
# Function to create a plot
plot_function <- function(data, enzyme_name) {
p <- ggplot(data, aes(x = config, y = Value)) +
geom_boxplot(aes(fill = config)) +
scale_fill_manual(values = c("control" = "grey", "case" = "blue")) +
geom_jitter(width = 0.2, size = 2, aes(color = config), stroke = 3) +
scale_color_manual(values = c("control" = "grey", "case" = "blue")) +
labs(
title = paste("Enzyme:", enzyme_name),
x = "",
y = "Reads per Kilobase (RPK)"
) +
scale_x_discrete(labels = new_labels) +
theme_minimal(base_size = 12) +
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none"
)
ggsave(paste0("Enzyme_", enzyme_name, ".png"), dpi = 600, plot = p, width = 10, height = 6)
}
# Loop through each enzyme and plot
enzyme_names <- unique(long_df$Enzyme)
for (enzyme in enzyme_names) {
enzyme_data <- filter(long_df, Enzyme == enzyme)
plot_function(enzyme_data, enzyme)
}
# Function to create a plot
plot_function <- function(data, enzyme_name) {
p <- ggplot(data, aes(x = config, y = Value)) +
geom_boxplot(aes(fill = config)) +
scale_fill_manual(values = c("control" = "grey", "case" = "blue")) +
geom_jitter(width = 0.2, size = 2, aes(color = config), stroke = 0.2) +
scale_color_manual(values = c("control" = "grey", "case" = "blue")) +
labs(
title = paste("Enzyme:", enzyme_name),
x = "",
y = "Reads per Kilobase (RPK)"
) +
scale_x_discrete(labels = new_labels) +
theme_minimal(base_size = 12) +
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none"
)
ggsave(paste0("Enzyme_", enzyme_name, ".png"), dpi = 600, plot = p, width = 10, height = 6)
}
# Loop through each enzyme and plot
enzyme_names <- unique(long_df$Enzyme)
for (enzyme in enzyme_names) {
enzyme_data <- filter(long_df, Enzyme == enzyme)
plot_function(enzyme_data, enzyme)
}
# Function to create a plot
plot_function <- function(data, enzyme_name) {
p <- ggplot(data, aes(x = config, y = Value)) +
geom_boxplot(aes(fill = config)) +
scale_fill_manual(values = c("control" = "grey", "case" = "blue")) +
geom_jitter(width = 0.2, size = 2, color = 'black') +
labs(
title = paste("Enzyme:", enzyme_name),
x = "",
y = "Reads per Kilobase (RPK)"
) +
scale_x_discrete(labels = new_labels) +
theme_minimal(base_size = 12) +
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none"
)
ggsave(paste0("Enzyme_", enzyme_name, ".png"), dpi = 600, plot = p, width = 10, height = 6)
}
# Loop through each enzyme and plot
enzyme_names <- unique(long_df$Enzyme)
for (enzyme in enzyme_names) {
enzyme_data <- filter(long_df, Enzyme == enzyme)
plot_function(enzyme_data, enzyme)
}
# Function to create a plot
plot_function <- function(data, enzyme_name) {
p <- ggplot(data, aes(x = config, y = Value)) +
geom_boxplot(aes(fill = config)) +
scale_fill_manual(values = c("control" = "grey", "case" = "blue")) +
geom_jitter(width = 0.2, size = 1, color = 'black') +
labs(
title = paste("Enzyme:", enzyme_name),
x = "",
y = "Reads per Kilobase (RPK)"
) +
scale_x_discrete(labels = new_labels) +
theme_minimal(base_size = 12) +
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none"
)
ggsave(paste0("Enzyme_", enzyme_name, ".png"), dpi = 600, plot = p, width = 10, height = 6)
}
# Loop through each enzyme and plot
enzyme_names <- unique(long_df$Enzyme)
for (enzyme in enzyme_names) {
enzyme_data <- filter(long_df, Enzyme == enzyme)
plot_function(enzyme_data, enzyme)
}
